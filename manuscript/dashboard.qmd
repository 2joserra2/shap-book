# Building SHAP dashboards with shapash

Shapash is a package that uses shap (or LIME) to compute contributions and visualizes those in a dashboard or in a report.

The dashboard can be useful for exploring explanations and is definitely more handy than iterating through the explanations in a Jupyter notebook or -- even worse -- in a Python script.

This allows a bit of a explorative data analysis style of discovery.

## Installation

Shapash can be installed with pip:

```{python}
#| eval: false
pip install shapash
```

If you also want the report capabilities, install it like this:

```{python}
#| eval: false
pip install shapash
```

## A quick example with shapash

Let's build a simple dashboard using the california housing data.

```{python}
import sklearn
import shap
import shapash
import pandas as pd
from sklearn.model_selection import train_test_split, RandomizedSearchCV
from lightgbm import LGBMRegressor

# Load the California housing dataset from Shap
X,y = shap.datasets.california()

X_train, X_test, y_train, y_test = train_test_split(
  X, y, train_size=0.8, random_state=1
)

# Train a model
model = LGBMRegressor(n_estimators=100).fit(X_train, y_train)

y_pred = pd.DataFrame(
  model.predict(X_test), columns=['pred'], index=X_test.index
)

xpl = shapash.SmartExplainer(
    model=model
)

explainer = shap.Explainer(model, X_train)

xpl.compile(
  y_pred=y_pred,
  x = X_test
)

```

To start the app, you can just hit the following:

```{python}
app = xpl.run_app(title_story="California Housing", port=8020)
```

This will run the server locally on the 8020 port.
It will also show you a link to `http://0.0.0.0:8050/`, where you can see the shapash app up and running:

## The dashboard


![Shapash Webapp](images/shapash.png)

The dashboard is interactive and contains multiple boxes:

- Top left: It shows the feature importance
- Bottom left: The feature contributions (PDP) are plotted in the lower left. Change the feature by clicking through the importance graph
- Top right has multiple tabs:
  -  The raw data values
  - filters which will add a subset view on the importance graph 
  - true versus predicted plot
- Bottom right shows a bar plot with the Shapley values. The instance can be picked in the top right graph with the dataset picker. Alternatively in the feature contribution figure on the bottom left. Also some options to adapt the graph, e.g. only show most influential features.

To stop the app, the following works:

```{python}
app.kill()
```

