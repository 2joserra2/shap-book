# Building SHAP Dashboards with Shapash

::: {.callout-tip appearance="simple"}

By the end of this chapter, you will be able to:

- Create dashboards displaying insights from SHAP values.
- Install and use Shapash.

:::

Shapash is a package that utilizes SHAP (or LIME) to compute contributions and visualize them in a dashboard or report.
The dashboard is more convenient for exploring explanations than iterating through explanations in a Jupyter notebook or Python script, enabling exploratory data analysis.

## Installation

You can install Shapash using pip:

```{python}
#| eval: false
pip install shapash==2.3.0
```

## A quick example with Shapash

We'll build a simple dashboard using the California housing data.

```{python}
#| eval: False
import sklearn
import shap
import shapash
import pandas as pd
from sklearn.model_selection import train_test_split
from lightgbm import LGBMRegressor

# Load the California housing dataset from Shap
X, y = shap.datasets.california()

X_train, X_test, y_train, y_test = train_test_split(
  X, y, train_size=0.8, random_state=1
)

# Train a model
model = LGBMRegressor(n_estimators=100).fit(X_train, y_train)

y_pred = pd.DataFrame(
  model.predict(X_test), columns=['pred'], index=X_test.index
)

xpl = shapash.SmartExplainer(model=model)

explainer = shap.Explainer(model, X_train)

xpl.compile(y_pred=y_pred, x=X_test)
```

To start the app, simply run:

```{python}
#| output: False
#| eval: False
app = xpl.run_app(title_story='California Housing', port=8020)
```

This displays a link to `http://0.0.0.0:8020/`, where the Shapash app is accessible.

## Dashboard overview

![Shapash Webapp](images/shapash.jpg)

The interactive dashboard contains several sections:

- Top left: Displays feature importance.
- Bottom left: Feature dependence plots. The feature can be changed by clicking on the importance graph.
- Top right: Contains multiple tabs, including raw data values, filters for a subset view on the importance graph, and a true versus predicted plot.
- Bottom right: Presents a bar plot of SHAP values. Select an instance in the top-right graph using the dataset picker or in the bottom-left feature contribution figure. The graph can be customized, for example by displaying only the most influential features.

To stop the app, use:

```{python}
app.kill()
```
